// <auto-generated />
using System;
using DaricTemplate.Infra.Data.Commands.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DaricTemplate.Infra.Data.Commands.Migrations
{
    [DbContext(typeof(DaricTemplateCommandDbContext))]
    [Migration("20250908091407_InitialDB")]
    partial class InitialDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DaricTemplate.Core.Domain.BaseInfo.CountryLocations.Entities.CountryLocation", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Abbreviation")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("AlternativeTitle")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<Guid>("BusinessId")
                        .IsUnicode(true)
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<byte>("LocationType")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("ModifiedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ParentCountryLocationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.HasIndex("ParentCountryLocationId");

                    b.ToTable("CountryLocations");
                });

            modelBuilder.Entity("DaricTemplate.Core.Domain.BaseInfo.CountryLocations.Entities.CountryLocation", b =>
                {
                    b.HasOne("DaricTemplate.Core.Domain.BaseInfo.CountryLocations.Entities.CountryLocation", "ParentCountryLocation")
                        .WithMany("CountryLocations")
                        .HasForeignKey("ParentCountryLocationId")
                        .HasPrincipalKey("BusinessId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ParentCountryLocation");
                });

            modelBuilder.Entity("DaricTemplate.Core.Domain.BaseInfo.CountryLocations.Entities.CountryLocation", b =>
                {
                    b.Navigation("CountryLocations");
                });
#pragma warning restore 612, 618
        }
    }
}
